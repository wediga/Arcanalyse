name: CI

on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]

jobs:
  backend:
    name: Backend (lint, typecheck, tests, openapi)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        id: py
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Setup uv
        uses: astral-sh/setup-uv@v2

      - name: Cache venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-py${{ steps.py.outputs.python-version }}-${{ hashFiles('backend/requirements-ci.txt') }}

      - name: Create venv & install deps
        run: |
          uv venv --python=${{ steps.py.outputs.python-version }}
          uv pip install -r backend/requirements-ci.txt

      # Ruff darf nicht mehr failen; fixbare Dinge werden automatisch korrigiert.
      - name: Ruff (lint, non-blocking)
        working-directory: backend
        run: uv run python -m ruff check . --fix --exit-zero

      - name: Mypy (typecheck)
        working-directory: backend
        run: uv run python -m mypy .

      - name: Pytest (backend)
        working-directory: backend
        run: uv run python -m pytest tests -q

      - name: Generate OpenAPI JSON
        working-directory: backend
        run: |
          uv run python -c "import json; from app.main import create_app; print(json.dumps(create_app().openapi()))" > ../backend_openapi.json

      - name: Upload OpenAPI artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi
          path: backend_openapi.json

  frontend:
    name: Frontend (types, tests)
    runs-on: ubuntu-latest
    needs: backend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install FE deps
        working-directory: frontend
        run: npm ci

      - name: Download OpenAPI artifact
        uses: actions/download-artifact@v4
        with:
          name: openapi
          path: frontend

      - name: Generate API types
        working-directory: frontend
        run: npx --yes openapi-typescript ./backend_openapi.json -o ./src/shared/types/api.d.ts --export-type

      - name: Vitest (frontend)
        working-directory: frontend
        run: npm run test:run
